buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.msit'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

project.tasks.named("processResources", Copy.class) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //========== WEB ==========
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // thymeleaf layout
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    //========== DB ==========
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // jog4jdbc
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    // query dsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'
    // h2
    runtimeOnly 'com.h2database:h2'

    //==========ETC==========
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // enc, dnc yaml
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    testImplementation 'io.rest-assured:rest-assured:3.3.0'

    //==========TEST==========
    // spring test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


/* =============== BEGIN QueryDsl SETTING ===============*/
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
/* =============== END QueryDsl SETTING ===============*/
